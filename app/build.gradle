plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    namespace 'fr.liteapp.photosynckt'
    compileSdk 34

    defaultConfig {
        applicationId "fr.liteapp.photosynckt"
        minSdk 31
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                //arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

        }

        debug {
            minifyEnabled false
            shrinkResources false

            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            // Add debug to the application name
            resValue "string", "app_name", "[PhotoSync]"
            resValue "string", "server_url", "http://${getLocalIp('wlan0', 'wlan0')}:2701/api/"

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildToolsVersion '34.0.0'
}

dependencies {
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    androidTestImplementation platform('androidx.compose:compose-bom:2023.03.00')
    def room_version = '2.5.2'
    def glide_version = '4.16.0'
    def retrofit_version = '2.9.0'
    def paging_version = '3.2.1'

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation 'com.github.bumptech.glide:compose:1.0.0-alpha.6'
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"

    // Glide support for Jetpack Compose
    implementation 'com.google.accompanist:accompanist-drawablepainter:0.30.1'
    implementation 'com.google.accompanist:accompanist-placeholder:0.30.1'

    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.paging:paging-compose:$paging_version"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.compose.material:material:1.5.1'
    implementation 'androidx.compose.material:material-icons-extended:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.navigation:navigation-compose:2.7.3'
    implementation platform('androidx.compose:compose-bom:2023.09.01')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3:1.1.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2023.09.01')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.5.1'
}

configurations.implementation {
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

// Get the ip address by interface name
static def getLocalIp(String interfaceName, String interfaceName2) {
    NetworkInterface iface = NetworkInterface.getByName(interfaceName) ?: NetworkInterface.getByName(interfaceName2)
    for (InterfaceAddress address : iface.getInterfaceAddresses()) {
        String ip = address.getAddress().getHostAddress()
        if (ip.length() <= 15) {
            return ip;
        }
    }
}